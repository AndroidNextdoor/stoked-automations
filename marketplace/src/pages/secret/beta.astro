---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const allPlugins = await getCollection('plugins');
const totalPlugins = allPlugins.length;

// Development environment stats
const devStats = {
  nodeVersion: process.version,
  environment: import.meta.env.MODE,
  buildTime: new Date().toISOString(),
};
---

<Layout
  title="Beta Development Environment - Stoked Automations"
  description="Local development environment for testing marketplace features"
>
  <div class="dev-container">
    <div class="dev-header">
      <div class="status-badge">üöß Beta Environment</div>
      <h1>Local Development Environment</h1>
      <p class="subtitle">Testing and development area for marketplace features</p>
    </div>

    <section class="dev-section">
      <h2>üéØ Environment Status</h2>
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-label">Environment</div>
          <div class="stat-value">{devStats.environment}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">Node Version</div>
          <div class="stat-value">{devStats.nodeVersion}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">Total Plugins</div>
          <div class="stat-value">{totalPlugins}</div>
        </div>
        <div class="stat-card">
          <div class="stat-label">Build Time</div>
          <div class="stat-value">{new Date(devStats.buildTime).toLocaleTimeString()}</div>
        </div>
      </div>
    </section>

    <section class="dev-section">
      <h2>üì¶ Local Setup Commands</h2>
      <div class="command-list">
        <div class="command-item">
          <h3>1. Install Dependencies</h3>
          <pre><code>pnpm install</code></pre>
          <p>Install all workspace dependencies including marketplace and MCP plugins</p>
        </div>

        <div class="command-item">
          <h3>2. Start Dev Server</h3>
          <pre><code>cd marketplace && npm run dev</code></pre>
          <p>Start Astro development server at http://localhost:4321</p>
        </div>

        <div class="command-item">
          <h3>3. Build for Production</h3>
          <pre><code>cd marketplace && npm run build</code></pre>
          <p>Build static site to dist/ directory</p>
        </div>

        <div class="command-item">
          <h3>4. Sync Marketplace Catalogs</h3>
          <pre><code>pnpm run sync-marketplace</code></pre>
          <p>Regenerate marketplace.json from marketplace.extended.json</p>
        </div>

        <div class="command-item">
          <h3>5. Validate Plugins</h3>
          <pre><code>./scripts/validate-all.sh</code></pre>
          <p>Run comprehensive validation on all plugins</p>
        </div>
      </div>
    </section>

    <section class="dev-section">
      <h2>üîß Plugin Development</h2>
      <div class="dev-grid">
        <div class="dev-card">
          <h3>Add New Plugin</h3>
          <ol>
            <li>Create plugin structure in <code>plugins/[category]/[name]/</code></li>
            <li>Add <code>.claude-plugin/plugin.json</code></li>
            <li>Create <code>README.md</code> and <code>LICENSE</code></li>
            <li>Edit <code>.claude-plugin/marketplace.extended.json</code></li>
            <li>Run <code>pnpm run sync-marketplace</code></li>
            <li>Validate with <code>./scripts/validate-all.sh</code></li>
          </ol>
        </div>

        <div class="dev-card">
          <h3>Test Plugin Locally</h3>
          <ol>
            <li>Create test marketplace: <code>mkdir -p ~/test-marketplace/.claude-plugin</code></li>
            <li>Create local marketplace.json pointing to your plugin</li>
            <li>Add marketplace: <code>/plugin marketplace add ~/test-marketplace</code></li>
            <li>Install plugin: <code>/plugin install plugin-name@test</code></li>
            <li>Test commands/agents/hooks</li>
          </ol>
        </div>

        <div class="dev-card">
          <h3>MCP Plugin Development</h3>
          <ol>
            <li>Navigate to <code>plugins/mcp/[plugin-name]/</code></li>
            <li>Install deps: <code>pnpm install</code></li>
            <li>Build: <code>pnpm build</code></li>
            <li>Test: <code>pnpm test</code></li>
            <li>Type check: <code>pnpm typecheck</code></li>
          </ol>
        </div>

        <div class="dev-card">
          <h3>Two-Catalog System</h3>
          <ul>
            <li><strong>marketplace.extended.json</strong> - Source of truth with full metadata</li>
            <li><strong>marketplace.json</strong> - Auto-generated CLI-compatible version</li>
            <li>Always edit extended, then run sync-marketplace</li>
            <li>CI fails if catalogs are out of sync</li>
          </ul>
        </div>
      </div>
    </section>

    <section class="dev-section">
      <h2>üöÄ Deployment</h2>
      <div class="deploy-info">
        <div class="deploy-card">
          <h3>GitHub Pages Deployment</h3>
          <p>The marketplace automatically deploys when you push to main:</p>
          <pre><code>git add .
git commit -m "Your commit message"
git push origin main</code></pre>
          <p>GitHub Actions will build and deploy to <strong>https://stokedautomations.com</strong></p>
        </div>

        <div class="deploy-card">
          <h3>DNS Configuration (Namecheap)</h3>
          <p>Set these DNS records for your domain:</p>
          <div class="dns-table">
            <div class="dns-row">
              <span class="dns-type">A Record</span>
              <span class="dns-host">@</span>
              <span class="dns-value">185.199.108.153</span>
            </div>
            <div class="dns-row">
              <span class="dns-type">A Record</span>
              <span class="dns-host">@</span>
              <span class="dns-value">185.199.109.153</span>
            </div>
            <div class="dns-row">
              <span class="dns-type">A Record</span>
              <span class="dns-host">@</span>
              <span class="dns-value">185.199.110.153</span>
            </div>
            <div class="dns-row">
              <span class="dns-type">A Record</span>
              <span class="dns-host">@</span>
              <span class="dns-value">185.199.111.153</span>
            </div>
            <div class="dns-row">
              <span class="dns-type">CNAME</span>
              <span class="dns-host">www</span>
              <span class="dns-value">androidnextdoor.github.io</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="dev-section">
      <h2>üìö Quick Links</h2>
      <div class="links-grid">
        <a href="/" class="link-card">üè† Marketplace Home</a>
        <a href="https://github.com/AndroidNextdoor/stoked-automations" target="_blank" class="link-card">üì¶ GitHub Repository</a>
        <a href="https://docs.claude.com/en/docs/claude-code/plugins" target="_blank" class="link-card">üìñ Plugin Docs</a>
        <a href="https://github.com/AndroidNextdoor/stoked-automations/blob/main/CLAUDE.md" target="_blank" class="link-card">ü§ñ CLAUDE.md Guide</a>
      </div>
    </section>

    <section class="dev-section">
      <h2>‚ö†Ô∏è Important Notes</h2>
      <div class="notes-box">
        <ul>
          <li><strong>Always run sync-marketplace</strong> after editing marketplace.extended.json</li>
          <li><strong>Make scripts executable:</strong> <code>chmod +x scripts/*.sh</code></li>
          <li><strong>Validate before committing:</strong> <code>./scripts/validate-all.sh</code></li>
          <li><strong>Use portable paths in hooks:</strong> <code>${'{CLAUDE_PLUGIN_ROOT}'}/script.sh</code></li>
          <li><strong>No hardcoded secrets</strong> - CI will block commits with credentials</li>
          <li><strong>Follow semantic versioning</strong> - MAJOR.MINOR.PATCH</li>
        </ul>
      </div>
    </section>
  </div>
</Layout>

<style>
  .dev-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .dev-header {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem 0;
  }

  .status-badge {
    display: inline-block;
    background: linear-gradient(135deg, var(--green-500), var(--blue-500));
    color: var(--slate-950);
    padding: 0.5rem 1.5rem;
    border-radius: 2rem;
    font-weight: 700;
    font-size: 0.875rem;
    margin-bottom: 1rem;
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
  }

  .dev-header h1 {
    font-size: clamp(2rem, 5vw, 3rem);
    font-weight: 900;
    margin: 0.5rem 0;
    background: linear-gradient(135deg, var(--green-400), var(--blue-400));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .subtitle {
    font-size: 1.125rem;
    color: var(--slate-400);
    margin: 0.5rem 0 0 0;
  }

  .dev-section {
    background: var(--slate-850);
    border: 1px solid var(--slate-800);
    border-radius: 1rem;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .dev-section h2 {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0 0 1.5rem 0;
    color: var(--green-400);
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .stat-card {
    background: var(--slate-800);
    border: 1px solid var(--slate-700);
    border-radius: 0.5rem;
    padding: 1rem;
    text-align: center;
  }

  .stat-label {
    font-size: 0.75rem;
    color: var(--slate-500);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 0.5rem;
    font-weight: 600;
  }

  .stat-value {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--green-400);
    font-family: var(--font-mono);
  }

  .command-list {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .command-item h3 {
    font-size: 1rem;
    margin: 0 0 0.5rem 0;
    color: var(--slate-200);
  }

  .command-item pre {
    margin: 0.5rem 0;
  }

  .command-item p {
    margin: 0.5rem 0 0 0;
    font-size: 0.875rem;
    color: var(--slate-400);
  }

  .dev-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .dev-card {
    background: var(--slate-800);
    border: 1px solid var(--slate-700);
    border-radius: 0.75rem;
    padding: 1.5rem;
  }

  .dev-card h3 {
    font-size: 1.125rem;
    margin: 0 0 1rem 0;
    color: var(--green-400);
  }

  .dev-card ol,
  .dev-card ul {
    margin: 0;
    padding-left: 1.5rem;
    color: var(--slate-300);
  }

  .dev-card li {
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.6;
  }

  .dev-card code {
    font-size: 0.75rem;
  }

  .deploy-info {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .deploy-card {
    background: var(--slate-800);
    border: 1px solid var(--slate-700);
    border-radius: 0.75rem;
    padding: 1.5rem;
  }

  .deploy-card h3 {
    margin: 0 0 1rem 0;
    color: var(--green-400);
  }

  .deploy-card p {
    margin: 0.5rem 0;
    color: var(--slate-300);
  }

  .deploy-card pre {
    margin: 1rem 0;
  }

  .dns-table {
    margin-top: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .dns-row {
    display: grid;
    grid-template-columns: 100px 80px 1fr;
    gap: 1rem;
    padding: 0.75rem;
    background: var(--slate-900);
    border: 1px solid var(--slate-700);
    border-radius: 0.375rem;
    font-family: var(--font-mono);
    font-size: 0.875rem;
  }

  .dns-type {
    color: var(--green-400);
    font-weight: 600;
  }

  .dns-host {
    color: var(--blue-400);
  }

  .dns-value {
    color: var(--slate-300);
  }

  .links-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .link-card {
    background: var(--slate-800);
    border: 1px solid var(--slate-700);
    border-radius: 0.5rem;
    padding: 1rem;
    text-align: center;
    text-decoration: none;
    color: var(--slate-200);
    font-weight: 600;
    transition: all var(--transition-base);
  }

  .link-card:hover {
    border-color: var(--green-500);
    background: var(--slate-750);
    transform: translateY(-2px);
  }

  .notes-box {
    background: var(--slate-800);
    border: 1px solid var(--slate-700);
    border-left: 4px solid var(--green-500);
    border-radius: 0.5rem;
    padding: 1.5rem;
  }

  .notes-box ul {
    margin: 0;
    padding-left: 1.5rem;
    color: var(--slate-300);
  }

  .notes-box li {
    margin-bottom: 0.75rem;
    line-height: 1.6;
  }

  .notes-box code {
    font-size: 0.875rem;
  }

  @media (max-width: 768px) {
    .dev-container {
      padding: 1rem;
    }

    .dev-section {
      padding: 1.5rem 1rem;
    }

    .stats-grid,
    .dev-grid,
    .links-grid {
      grid-template-columns: 1fr;
    }

    .dns-row {
      grid-template-columns: 1fr;
      gap: 0.25rem;
    }
  }
</style>